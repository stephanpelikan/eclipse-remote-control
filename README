erc - eclipse remote control

1) Introduction
2) Security Warning
3) Distribution / Eclipse Update Site
4) Build
5) Usage
6) Commands
6.1) Open File
6.2) Execute Command

---------------------------------------------------------------------
Introduction

Eclipse plug-in project which adds remote control features to eclipse.
Commands can be sent via the eclipse remote control client to a
running eclipse instance.

---------------------------------------------------------------------
Security Warning

Eclipse remote control doesen't implement authentication. So you should make
sure that the eclipse remote control port can not be reached by people you
don't trust. I recommend using eclipse remote control only locally on your
PC and not over an open network.

---------------------------------------------------------------------
Distribution / Eclipse Update Site

This project is licenses under the GPL license. See the file COPYING
for details.

The following builds have been tested with eclipse helios which is based on
eclipse platform 3.6.

The eclipse update site is available here:
https://github.com/marook/eclipse-remote-control/raw/master/workspaces/erc/update_site/site.xml

The eclipse remote control client can be downloaded here:
https://github.com/marook/eclipse-remote-control/raw/master/workspaces/erc/release/eclipse_remote_control_client_1.3.0.jar

---------------------------------------------------------------------
Build

To build the eclipse remote control client use the ant build.xml file
in the client project. The following ant targets are available:

* clean: Removes all temporary resources required for the ant build.
* compile: Compiles the sources for the eclipse remote control client.
* package: Creates a jar file with the client application.

Use the default target package to build the client application.

---------------------------------------------------------------------
Usage

Requirements are:
* You have installed the eclipse remote control eclipse plugins.
* You have downloaded the eclipse remote control client jar.

Launch your eclipse with the eclipse remote control pluging installed.
After eclipse has started you can send commands via the eclipse remote
control client application. The syntax is:

$ java -jar eclipse_remote_control.jar [command] [command args]

---------------------------------------------------------------------
Commands

Currently the following commands are supported:


---------------------------------------------------------------------
Commands - Open File

This command opens a file in the running eclipse instance.

The file is first looked up in the eclipse workspace. If the file can't be
found in the eclipse workspace then the file is opened from the operating
system's file system.

So the example path /myproject/file.txt will open the file 'file.txt' below
the eclipse project myproject. If there is no such file in the myproject
project then the path will be looked up below the file system root.

An optional line number can be specified for files which are opened from the
eclipse workspace. After opening the file the specified line will be selected.
If you try to open a absolute file system path the line number will be ignored.

Syntax:
$ java -jar eclipse_remote_control.jar open_file [workspace file path] <line number>
$ java -jar eclipse_remote_control.jar open_file [absolute path to file]

Example:
$ java -jar eclipse_remote_control.jar open_file /tmp/file.txt 2
$ java -jar eclipse_remote_control.jar open_file C:\tmp\file.txt

---------------------------------------------------------------------
Commands - Execute Command

This command is used to execute run configurations or external tool
configurations. This includes ant builds for example.

You have to specify the name of the executed run configuration. To find out
the run configuration name open Run -> Run Configurations... in eclipse. Select
the run configuration in tree on the left. Then the name is displayed in the
first row on the right hand side.

As an optional argument you can pass the run mode in which the run configuration
is launched. The following alternatives are possible:
* RUN
* DEBUG
* PROFILE

Syntax:
$ java -jar eclipse_remote_control.jar execute_command [run configuration name] <run mode>

Example:
$ java -jar eclipse_remote_control.jar execute_command my_ant_config DEBUG

---------------------------------------------------------------------
Commands - Remote Debugging

This command is used to execute remote-debug run configurations.

You have to specify the name of the executed run configuration.

As an optional argument you can pass the remote-port and the remote-host to
connect to. This overrides the defaults of the run configuration.

Running this command terminates any previous by eclipse_remote_control
launched remote-debug-sessions. It copies the given run configuration
and changes host and port. After running the remote debugger the
debug-perspective is shown if this configured in Preferences->Run/Debug->Perspectives.
After starting successfully or waiting for passing the launch-timeout
the client returns. Upon error a message is print to stderr and the
exit code is not 0 (1 for common errors and 2 for "connecting-to-eclipse"
errors). After terminating the debug-session the previously created
copy of the initial run configuration is removed.

Syntax:
$ java -jar eclipse_remote_control.jar remotedebug_command [run configuration name] <remote port> <remote host>

Examples:
$ java -jar eclipse_remote_control.jar remotedebug_command my_remotedebugging_config
$ java -jar eclipse_remote_control.jar remotedebug_command my_remotedebugging_config 4711 myserver.com
